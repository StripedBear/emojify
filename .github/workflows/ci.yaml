name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Yandex Cloud CLI
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          echo "$HOME/yandex-cloud/bin" >> $GITHUB_PATH
          export PATH="$PATH:$HOME/yandex-cloud/bin"
          source ~/.bashrc
          echo "${{ secrets.YC_SERVICE_ACCOUNT_KEY }}" | sed 's/\\n/\n/g' > /tmp/key.json
          yc config set service-account-key /tmp/key.json
          yc config set cloud-id ${{ secrets.YC_CLOUD_ID }}
          yc config set folder-id ${{ secrets.YC_FOLDER_ID }}

      - name: Log in to Yandex Cloud Container Registry
        run: |
          echo "${{ secrets.YC_SERVICE_ACCOUNT_KEY }}" > /tmp/key.json
          export PATH="$PATH:$HOME/yandex-cloud/bin"
          echo "${{ secrets.YC_TOKEN }}" | docker login --username oauth --password-stdin cr.yandex
          yc container registry configure-docker

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: cr.yandex/${{ secrets.YC_REGISTRY }}/emojify:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Yandex Cloud CLI
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          export PATH="$PATH:$HOME/yandex-cloud/bin"
          yc version

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Deploy Prometheus
        run: |
          echo "$KUBE_CONFIG_DATA" | base64 --decode > kubeconfig
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm upgrade --install prometheus prometheus-community/prometheus \
            -f prometheus-values.yaml --kubeconfig=kubeconfig

      - name: Deploy Graylog
        run: |
          echo "$KUBE_CONFIG_DATA" | base64 --decode > kubeconfig
          helm repo add graylog https://helm.graylog2.org
          helm upgrade --install graylog graylog/graylog \
            -f graylog-values.yaml --kubeconfig=kubeconfig

      - name: Deploy Emojify
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        run: |
          echo "$KUBE_CONFIG_DATA" | base64 --decode > kubeconfig
          helm upgrade --install emojify ./emojify-chart --kubeconfig=kubeconfig
